"use strict";(self.webpackChunkdocumentations=self.webpackChunkdocumentations||[]).push([[1967],{9613:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var a=n(9496);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),l=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=l(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=l(n),m=r,f=d["".concat(p,".").concat(m)]||d[m]||c[m]||i;return n?a.createElement(f,o(o({ref:t},u),{},{components:n})):a.createElement(f,o({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},9617:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return c}});var a=n(5443),r=n(3010),i=(n(9496),n(9613)),o=["components"],s={id:"sequelize",title:"automapper/sequelize",sidebar_label:"automapper/sequelize",sidebar_position:4},p=void 0,l={unversionedId:"strategies/sequelize",id:"strategies/sequelize",title:"automapper/sequelize",description:"Overview",source:"@site/docs/strategies/sequelize.mdx",sourceDirName:"strategies",slug:"/strategies/sequelize",permalink:"/docs/strategies/sequelize",draft:!1,editUrl:"https://github.com/nartc/mapper/tree/main/packages/documentations/docs/strategies/sequelize.mdx",tags:[],version:"current",lastUpdatedBy:"Chau Tran",lastUpdatedAt:1648507459,formattedLastUpdatedAt:"3/28/2022",sidebarPosition:4,frontMatter:{id:"sequelize",title:"automapper/sequelize",sidebar_label:"automapper/sequelize",sidebar_position:4},sidebar:"docs",previous:{title:"automapper/mikro",permalink:"/docs/strategies/mikro"},next:{title:"Transformer Plugin",permalink:"/docs/misc/transformer-plugin"}},u={},c=[{value:"Overview",id:"overview",level:2},{value:"Installation",id:"installation",level:2},{value:"Usage",id:"usage",level:2},{value:"<code>preMap</code>",id:"premap",level:3},{value:"<code>destinationConstructor</code>",id:"destinationconstructor",level:3},{value:"Metadata",id:"metadata",level:2}],d={toc:c};function m(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"overview"},"Overview"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"@automapper/sequelize")," is an official strategy that works with ",(0,i.kt)("a",{parentName:"p",href:"https://sequelize.org/"},"Sequelize"),". ",(0,i.kt)("inlineCode",{parentName:"p"},"@automapper/sequelize")," is an extension of ",(0,i.kt)("inlineCode",{parentName:"p"},"@automapper/classes")),(0,i.kt)("h2",{id:"installation"},"Installation"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"npm i @automapper/core @automapper/classes @automapper/sequelize\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-shell"},"yarn add @automapper/core @automapper/classes @automapper/sequelize\n")),(0,i.kt)("h2",{id:"usage"},"Usage"),(0,i.kt)("p",null,"Using ",(0,i.kt)("inlineCode",{parentName:"p"},"@automapper/sequelize")," isn't different from using ",(0,i.kt)("a",{parentName:"p",href:"./classes#usage"},(0,i.kt)("inlineCode",{parentName:"a"},"@automapper/classes")),". The difference is ",(0,i.kt)("inlineCode",{parentName:"p"},"@automapper/sequelize")," has a custom ",(0,i.kt)("inlineCode",{parentName:"p"},"preMap")," that handles how to serialize the ",(0,i.kt)("inlineCode",{parentName:"p"},"sourceObject")," because of how Sequelize returns the object upon a Retrieve operation and a custom ",(0,i.kt)("inlineCode",{parentName:"p"},"destinationConstructor"),"."),(0,i.kt)("h3",{id:"premap"},(0,i.kt)("inlineCode",{parentName:"h3"},"preMap")),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"Sequelize#Model.get()")," if it's available to serialize the ",(0,i.kt)("inlineCode",{parentName:"p"},"sourceObject")),(0,i.kt)("h3",{id:"destinationconstructor"},(0,i.kt)("inlineCode",{parentName:"h3"},"destinationConstructor")),(0,i.kt)("p",null,"Use ",(0,i.kt)("inlineCode",{parentName:"p"},"Sequelize#Model.build()")," if it's available to construct the ",(0,i.kt)("inlineCode",{parentName:"p"},"destinationObject"),"."),(0,i.kt)("p",null,"We can customize this ",(0,i.kt)("inlineCode",{parentName:"p"},"preMap")," via ",(0,i.kt)("inlineCode",{parentName:"p"},"MappingStrategyInitializerOptions")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"const mapper = createMapper({\n    strategyInitializer: sequelize({\n        preMap: customPreMap,\n        destinationConstructor: customDestinationConstructor,\n    }),\n});\n")),(0,i.kt)("h2",{id:"metadata"},"Metadata"),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"./classes#metadata"},"@automapper/classes")))}m.isMDXComponent=!0}}]);