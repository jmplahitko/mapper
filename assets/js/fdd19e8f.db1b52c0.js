"use strict";(self.webpackChunkdocumentations=self.webpackChunkdocumentations||[]).push([[7391],{9613:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var r=n(9496);function o(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function a(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?a(Object(n),!0).forEach((function(e){o(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function c(t,e){if(null==t)return{};var n,r,o=function(t,e){if(null==t)return{};var n,r,o={},a=Object.keys(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||(o[n]=t[n]);return o}(t,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);for(r=0;r<a.length;r++)n=a[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(o[n]=t[n])}return o}var s=r.createContext({}),p=function(t){var e=r.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=p(t.components);return r.createElement(s.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},d=r.forwardRef((function(t,e){var n=t.components,o=t.mdxType,a=t.originalType,s=t.parentName,u=c(t,["components","mdxType","originalType","parentName"]),d=p(n),m=o,f=d["".concat(s,".").concat(m)]||d[m]||l[m]||a;return n?r.createElement(f,i(i({ref:e},u),{},{components:n})):r.createElement(f,i({ref:e},u))}));function m(t,e){var n=arguments,o=e&&e.mdxType;if("string"==typeof t||o){var a=n.length,i=new Array(a);i[0]=d;var c={};for(var s in e)hasOwnProperty.call(e,s)&&(c[s]=e[s]);c.originalType=t,c.mdxType="string"==typeof t?t:o,i[1]=c;for(var p=2;p<a;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},562:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l}});var r=n(5443),o=n(3010),a=(n(9496),n(9613)),i=["components"],c={id:"construct-using",title:"ConstructUsing",sidebar_label:"ConstructUsing",sidebar_position:4},s=void 0,p={unversionedId:"mapping-configuration/construct-using",id:"mapping-configuration/construct-using",title:"ConstructUsing",description:"Call constructUsing() and pass in a DestinationConstructor to customize how AutoMapper should construct the Destination before every map operation against that Destination.",source:"@site/docs/mapping-configuration/construct-using.mdx",sourceDirName:"mapping-configuration",slug:"/mapping-configuration/construct-using",permalink:"/docs/mapping-configuration/construct-using",draft:!1,editUrl:"https://github.com/nartc/mapper/tree/main/packages/documentations/docs/mapping-configuration/construct-using.mdx",tags:[],version:"current",lastUpdatedBy:"Chau Tran",lastUpdatedAt:1648359081,formattedLastUpdatedAt:"3/27/2022",sidebarPosition:4,frontMatter:{id:"construct-using",title:"ConstructUsing",sidebar_label:"ConstructUsing",sidebar_position:4},sidebar:"docs",previous:{title:"BeforeMap",permalink:"/docs/mapping-configuration/before-map"},next:{title:"Extend",permalink:"/docs/mapping-configuration/extend"}},u={},l=[],d={toc:l};function m(t){var e=t.components,n=(0,o.Z)(t,i);return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Call ",(0,a.kt)("inlineCode",{parentName:"p"},"constructUsing()")," and pass in a ",(0,a.kt)("inlineCode",{parentName:"p"},"DestinationConstructor")," to customize how AutoMapper should construct the ",(0,a.kt)("inlineCode",{parentName:"p"},"Destination")," before every map operation against that ",(0,a.kt)("inlineCode",{parentName:"p"},"Destination"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"createMap(\n    mapper,\n    User,\n    UserDto, // \ud83d\udc48 --the destination modifier--\ud83d\udc47\n    constructUsing((sourceObject, destinationIdentifier) => {\n        // sourceObject is the data when run: mapper.map(sourceObject...);\n    })\n);\n")),(0,a.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,a.kt)("div",{parentName:"div",className:"admonition-heading"},(0,a.kt)("h5",{parentName:"div"},(0,a.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,a.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,a.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),(0,a.kt)("div",{parentName:"div",className:"admonition-content"},(0,a.kt)("p",{parentName:"div"},"All built-in ",(0,a.kt)("inlineCode",{parentName:"p"},"MappingStrategy")," should have a default ",(0,a.kt)("inlineCode",{parentName:"p"},"destinationConstructor")," (e.g: ",(0,a.kt)("inlineCode",{parentName:"p"},"@automapper/classes")," default is ",(0,a.kt)("inlineCode",{parentName:"p"},"new Destination()"),")."))))}m.isMDXComponent=!0}}]);