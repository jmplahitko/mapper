"use strict";(self.webpackChunkdocumentations=self.webpackChunkdocumentations||[]).push([[7435],{9613:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return d}});var n=r(9496);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),m=u(r),d=a,f=m["".concat(s,".").concat(d)]||m[d]||p[d]||o;return r?n.createElement(f,l(l({ref:t},c),{},{components:r})):n.createElement(f,l({ref:t},c))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}m.displayName="MDXCreateElement"},8597:function(e,t,r){r.d(t,{Z:function(){return l}});var n=r(9496),a=r(1626),o="tabItem_zeWL";function l(e){var t=e.children,r=e.hidden,l=e.className;return n.createElement("div",{role:"tabpanel",className:(0,a.Z)(o,l),hidden:r},t)}},109:function(e,t,r){r.d(t,{Z:function(){return d}});var n=r(5443),a=r(9496),o=r(1626),l=r(5230),i=r(1339),s=r(3601),u=r(7288),c="tabList_gs2P",p="tabItem_Ugfh";function m(e){var t,r,l=e.lazy,m=e.block,d=e.defaultValue,f=e.values,b=e.groupId,v=e.className,h=a.Children.map(e.children,(function(e){if((0,a.isValidElement)(e)&&"value"in e.props)return e;throw new Error("Docusaurus error: Bad <Tabs> child <"+("string"==typeof e.type?e.type:e.type.name)+'>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.')})),y=null!=f?f:h.map((function(e){var t=e.props;return{value:t.value,label:t.label,attributes:t.attributes}})),g=(0,i.l)(y,(function(e,t){return e.value===t.value}));if(g.length>0)throw new Error('Docusaurus error: Duplicate values "'+g.map((function(e){return e.value})).join(", ")+'" found in <Tabs>. Every value needs to be unique.');var k=null===d?d:null!=(t=null!=d?d:null==(r=h.find((function(e){return e.props.default})))?void 0:r.props.value)?t:h[0].props.value;if(null!==k&&!y.some((function(e){return e.value===k})))throw new Error('Docusaurus error: The <Tabs> has a defaultValue "'+k+'" but none of its children has the corresponding value. Available values are: '+y.map((function(e){return e.value})).join(", ")+". If you intend to show no default tab, use defaultValue={null} instead.");var w=(0,s.U)(),N=w.tabGroupChoices,T=w.setTabGroupChoices,O=(0,a.useState)(k),U=O[0],x=O[1],D=[],j=(0,u.o5)().blockElementScrollPositionUntilNextRender;if(null!=b){var E=N[b];null!=E&&E!==U&&y.some((function(e){return e.value===E}))&&x(E)}var P=function(e){var t=e.currentTarget,r=D.indexOf(t),n=y[r].value;n!==U&&(j(t),x(n),null!=b&&T(b,String(n)))},C=function(e){var t,r=null;switch(e.key){case"ArrowRight":var n,a=D.indexOf(e.currentTarget)+1;r=null!=(n=D[a])?n:D[0];break;case"ArrowLeft":var o,l=D.indexOf(e.currentTarget)-1;r=null!=(o=D[l])?o:D[D.length-1]}null==(t=r)||t.focus()};return a.createElement("div",{className:(0,o.Z)("tabs-container",c)},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,o.Z)("tabs",{"tabs--block":m},v)},y.map((function(e){var t=e.value,r=e.label,l=e.attributes;return a.createElement("li",(0,n.Z)({role:"tab",tabIndex:U===t?0:-1,"aria-selected":U===t,key:t,ref:function(e){return D.push(e)},onKeyDown:C,onFocus:P,onClick:P},l,{className:(0,o.Z)("tabs__item",p,null==l?void 0:l.className,{"tabs__item--active":U===t})}),null!=r?r:t)}))),l?(0,a.cloneElement)(h.filter((function(e){return e.props.value===U}))[0],{className:"margin-top--md"}):a.createElement("div",{className:"margin-top--md"},h.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==U})}))))}function d(e){var t=(0,l.Z)();return a.createElement(m,(0,n.Z)({key:String(t)},e))}},919:function(e,t,r){r.r(t),r.d(t,{assets:function(){return m},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return u},metadata:function(){return p},toc:function(){return d}});var n=r(5443),a=r(3010),o=(r(9496),r(9613)),l=r(109),i=r(8597),s=["components"],u={id:"preface",title:"Preface",sidebar_label:"Preface",sidebar_position:1},c=void 0,p={unversionedId:"tutorial/preface",id:"tutorial/preface",title:"Preface",description:"Welcome to AutoMapper TypeScript! This basic tutorial will show you the problem that AutoMapper tries to solve and how to use AutoMapper to solve it.",source:"@site/docs/tutorial/preface.mdx",sourceDirName:"tutorial",slug:"/tutorial/preface",permalink:"/docs/tutorial/preface",draft:!1,editUrl:"https://github.com/nartc/mapper/tree/main/packages/documentations/docs/tutorial/preface.mdx",tags:[],version:"current",lastUpdatedBy:"Chau Tran",lastUpdatedAt:1648095253,formattedLastUpdatedAt:"3/24/2022",sidebarPosition:1,frontMatter:{id:"preface",title:"Preface",sidebar_label:"Preface",sidebar_position:1},sidebar:"docs",previous:{title:"Installation",permalink:"/docs/getting-started/installation"},next:{title:"Create a Mapper",permalink:"/docs/tutorial/create-mapper"}},m={},d=[],f={toc:d};function b(e){var t=e.components,r=(0,a.Z)(e,s);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"Welcome to AutoMapper TypeScript! This basic tutorial will show you the problem that AutoMapper tries to solve and how to use AutoMapper to solve it."),(0,o.kt)("p",null,"Let's assume that you are building a method to return some ",(0,o.kt)("inlineCode",{parentName:"p"},"User")," information. The application has the following models:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"User"),": the data of a user from the database"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"UserDto"),": the shape of the user data that you want to return from the method")),(0,o.kt)(l.Z,{mdxType:"Tabs"},(0,o.kt)(i.Z,{value:"user",label:"user.entity.ts",default:!0,mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export class User {\n    firstName: string;\n    lastName: string;\n    username: string;\n    password: string;\n    bio: Bio;\n}\n\nexport class Bio {\n    job: Job;\n    birthday: Date;\n    avatarUrl: string;\n}\n\nexport class Job {\n    title: string;\n    salary: number;\n}\n"))),(0,o.kt)(i.Z,{value:"userdto",label:"user.dto.ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export class UserDto {\n    firstName: string;\n    lastName: string;\n    fullName: string;\n    username: string;\n    bio: BioDto;\n\n    static fromUser(user: User) {\n        const dto = new UserDto();\n        dto.firstName = user.firstName;\n        dto.lastName = user.lastName;\n        dto.fullName = user.firstName + ' ' + user.lastName;\n        dto.username = user.username;\n        dto.bio = BioDto.fromBio(user.bio);\n\n        return dto;\n    }\n}\n\nexport class BioDto {\n    jobTitle: string;\n    jobSalary: number;\n    birthday: string;\n    avatarUrl: string;\n\n    static fromBio(bio: Bio) {\n        const dto = new BioDto();\n        dto.jobTitle = bio.job.title;\n        dto.jobSalary = bio.job.salary;\n        dto.birthday = bio.birthday.toDateString();\n        dto.avatarUrl = bio.avatarUrl;\n\n        return dto;\n    }\n}\n"))),(0,o.kt)(i.Z,{value:"userservice",label:"user.service.ts",mdxType:"TabItem"},(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"export class UserService {\n    getUserByUsername(username: string): UserDto {\n        const user = fetchUserByUsernameFromDb(username);\n        return UserDto.fromUser(user);\n    }\n}\n")))),(0,o.kt)("p",null,"The issues with the above approach are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"Entity and DTO are coupled. ",(0,o.kt)("inlineCode",{parentName:"li"},"UserDto")," knows about ",(0,o.kt)("inlineCode",{parentName:"li"},"User"),"."),(0,o.kt)("li",{parentName:"ul"},"Mapping logic is repetitive and grows as your models grow.")),(0,o.kt)("p",null,"Let's see how AutoMapper can help. If you just want to see the final code, skip to ",(0,o.kt)("a",{parentName:"p",href:"./mapping-configurations#summary"},"Summary")))}b.isMDXComponent=!0}}]);