"use strict";(self.webpackChunkdocumentations=self.webpackChunkdocumentations||[]).push([[871],{9613:function(e,t,r){r.d(t,{Zo:function(){return s},kt:function(){return f}});var a=r(9496);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function c(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},s=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,s=c(e,["components","mdxType","originalType","parentName"]),u=p(r),f=n,m=u["".concat(l,".").concat(f)]||u[f]||d[f]||o;return r?a.createElement(m,i(i({ref:t},s),{},{components:r})):a.createElement(m,i({ref:t},s))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:n,i[1]=c;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},8441:function(e,t,r){r.r(t),r.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return f},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return d}});var a=r(5443),n=r(3010),o=(r(9496),r(9613)),i=["components"],c={id:"TransformerMetadataFactory",title:"Interface: TransformerMetadataFactory<TModel>",sidebar_label:"TransformerMetadataFactory",sidebar_position:0,custom_edit_url:null},l=void 0,p={unversionedId:"api/core/interfaces/TransformerMetadataFactory",id:"api/core/interfaces/TransformerMetadataFactory",title:"Interface: TransformerMetadataFactory<TModel>",description:"Type parameters",source:"@site/docs/api/core/interfaces/TransformerMetadataFactory.md",sourceDirName:"api/core/interfaces",slug:"/api/core/interfaces/TransformerMetadataFactory",permalink:"/docs/api/core/interfaces/TransformerMetadataFactory",draft:!1,editUrl:null,tags:[],version:"current",lastUpdatedBy:"Chau Tran",lastUpdatedAt:1653676669,formattedLastUpdatedAt:"5/27/2022",sidebarPosition:0,frontMatter:{id:"TransformerMetadataFactory",title:"Interface: TransformerMetadataFactory<TModel>",sidebar_label:"TransformerMetadataFactory",sidebar_position:0,custom_edit_url:null},sidebar:"api",previous:{title:"Resolver",permalink:"/docs/api/core/interfaces/Resolver"},next:{title:"README",permalink:"/docs/api/classes/"}},s={},d=[{value:"Type parameters",id:"type-parameters",level:2},{value:"Methods",id:"methods",level:2},{value:"__AUTOMAPPER_METADATA_FACTORY__",id:"__automapper_metadata_factory__",level:3},{value:"Returns",id:"returns",level:4},{value:"Defined in",id:"defined-in",level:4}],u={toc:d};function f(e){var t=e.components,r=(0,n.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},u,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"type-parameters"},"Type parameters"),(0,o.kt)("table",null,(0,o.kt)("thead",{parentName:"table"},(0,o.kt)("tr",{parentName:"thead"},(0,o.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,o.kt)("th",{parentName:"tr",align:"left"},"Type"))),(0,o.kt)("tbody",{parentName:"table"},(0,o.kt)("tr",{parentName:"tbody"},(0,o.kt)("td",{parentName:"tr",align:"left"},(0,o.kt)("inlineCode",{parentName:"td"},"TModel")),(0,o.kt)("td",{parentName:"tr",align:"left"},"extends ",(0,o.kt)("a",{parentName:"td",href:"/docs/api/core/modules#dictionary"},(0,o.kt)("inlineCode",{parentName:"a"},"Dictionary")),"<",(0,o.kt)("inlineCode",{parentName:"td"},"TModel"),">")))),(0,o.kt)("h2",{id:"methods"},"Methods"),(0,o.kt)("h3",{id:"__automapper_metadata_factory__"},"_","_","AUTOMAPPER","_","METADATA","_","FACTORY","_","_"),(0,o.kt)("p",null,"\u25b8 ",(0,o.kt)("inlineCode",{parentName:"p"},"Optional")," ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("strong",{parentName:"strong"},"AUTOMAPPER_METADATA_FACTORY")),"(): ","[propertyKey: string, options: Object][]"),(0,o.kt)("h4",{id:"returns"},"Returns"),(0,o.kt)("p",null,"[propertyKey: string, options: Object][]"),(0,o.kt)("h4",{id:"defined-in"},"Defined in"),(0,o.kt)("p",null,(0,o.kt)("a",{parentName:"p",href:"https://github.com/nartc/mapper/blob/fcb93a5/packages/core/src/lib/types.ts#L49"},"lib/types.ts:49")))}f.isMDXComponent=!0}}]);