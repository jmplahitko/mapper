"use strict";(self.webpackChunkdocumentations=self.webpackChunkdocumentations||[]).push([[7508],{9613:function(e,n,r){r.d(n,{Zo:function(){return f},kt:function(){return s}});var t=r(9496);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function p(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=t.createContext({}),m=function(e){var n=t.useContext(c),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},f=function(e){var n=m(e.components);return t.createElement(c.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},l=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,f=p(e,["components","mdxType","originalType","parentName"]),l=m(r),s=a,d=l["".concat(c,".").concat(s)]||l[s]||u[s]||o;return r?t.createElement(d,i(i({ref:n},f),{},{components:r})):t.createElement(d,i({ref:n},f))}));function s(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=l;var p={};for(var c in n)hasOwnProperty.call(n,c)&&(p[c]=n[c]);p.originalType=e,p.mdxType="string"==typeof e?e:a,i[1]=p;for(var m=2;m<o;m++)i[m]=r[m];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}l.displayName="MDXCreateElement"},3398:function(e,n,r){r.r(n),r.d(n,{assets:function(){return f},contentTitle:function(){return c},default:function(){return s},frontMatter:function(){return p},metadata:function(){return m},toc:function(){return u}});var t=r(5443),a=r(3010),o=(r(9496),r(9613)),i=["components"],p={id:"map-defer",title:"MapDefer",sidebar_label:"MapDefer",sidebar_position:11},c=void 0,m={unversionedId:"mapping-configuration/for-member/map-defer",id:"mapping-configuration/for-member/map-defer",title:"MapDefer",description:"mapDefer() is a special type of MemberMapFunction that can be used to defer another MemberMapFunction based on some logic in forMember()",source:"@site/docs/mapping-configuration/for-member/map-defer.mdx",sourceDirName:"mapping-configuration/for-member",slug:"/mapping-configuration/for-member/map-defer",permalink:"/docs/mapping-configuration/for-member/map-defer",draft:!1,editUrl:"https://github.com/nartc/mapper/tree/main/packages/documentations/docs/mapping-configuration/for-member/map-defer.mdx",tags:[],version:"current",lastUpdatedBy:"Chau Tran",lastUpdatedAt:1648447590,formattedLastUpdatedAt:"3/28/2022",sidebarPosition:11,frontMatter:{id:"map-defer",title:"MapDefer",sidebar_label:"MapDefer",sidebar_position:11},sidebar:"docs",previous:{title:"MapWithArguments",permalink:"/docs/mapping-configuration/for-member/map-with-arguments"},next:{title:"ForSelf",permalink:"/docs/mapping-configuration/for-self"}},f={},u=[],l={toc:u};function s(e){var n=e.components,r=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,t.Z)({},l,r,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"mapDefer()")," is a ",(0,o.kt)("em",{parentName:"p"},"special")," type of ",(0,o.kt)("inlineCode",{parentName:"p"},"MemberMapFunction")," that can be used to ",(0,o.kt)("em",{parentName:"p"},"defer")," another ",(0,o.kt)("inlineCode",{parentName:"p"},"MemberMapFunction")," based on some logic in ",(0,o.kt)("inlineCode",{parentName:"p"},"forMember()")),(0,o.kt)("p",null,"Call ",(0,o.kt)("inlineCode",{parentName:"p"},"mapDefer()")," and pass in the ",(0,o.kt)("inlineCode",{parentName:"p"},"DeferFunction")," which will be called with the ",(0,o.kt)("inlineCode",{parentName:"p"},"sourceObject"),". We can then use this ",(0,o.kt)("inlineCode",{parentName:"p"},"sourceObject")," and return another ",(0,o.kt)("inlineCode",{parentName:"p"},"MemberMapFunction")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"createMap(\n    mapper,\n    User,\n    UserDto,\n    forMember(\n        (destination) => destination.profile,\n        mapDefer((source) => {\n            if (source.profile.type === 'A')\n                return mapWith(\n                    ProfileDto,\n                    ProfileA,\n                    (source) => source.profile\n                );\n            return mapWith(ProfileDto, Profile, (source) => source.profile);\n        })\n    )\n);\n")),(0,o.kt)("p",null,(0,o.kt)("inlineCode",{parentName:"p"},"mapDefer()")," sets the ",(0,o.kt)("inlineCode",{parentName:"p"},"TransformationType")," to ",(0,o.kt)("inlineCode",{parentName:"p"},"TransformationType.MapDefer")))}s.isMDXComponent=!0}}]);