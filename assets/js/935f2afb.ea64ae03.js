"use strict";(self.webpackChunkdocumentations=self.webpackChunkdocumentations||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"docs":[{"type":"category","label":"Getting Started","items":[{"type":"link","label":"Overview","href":"/docs/getting-started/overview","docId":"getting-started/overview"},{"type":"link","label":"Migrating to AutoMapper 8","href":"/docs/getting-started/migrate-to-automapper-v8","docId":"getting-started/migrate-to-automapper-v8"},{"type":"link","label":"Installation","href":"/docs/getting-started/installation","docId":"getting-started/installation"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Tutorial","items":[{"type":"link","label":"Preface","href":"/docs/tutorial/preface","docId":"tutorial/preface"},{"type":"link","label":"Create a Mapper","href":"/docs/tutorial/create-mapper","docId":"tutorial/create-mapper"},{"type":"link","label":"Create Mappings","href":"/docs/tutorial/create-mapping","docId":"tutorial/create-mapping"},{"type":"link","label":"Use Mapping Configurations","href":"/docs/tutorial/mapping-configurations","docId":"tutorial/mapping-configurations"},{"type":"link","label":"Group Mapping Logic with Profile","href":"/docs/tutorial/mapping-profile","docId":"tutorial/mapping-profile"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Fundamentals","items":[{"type":"link","label":"Mapper","href":"/docs/fundamentals/mapper","docId":"fundamentals/mapper"},{"type":"link","label":"Mapping","href":"/docs/fundamentals/mapping","docId":"fundamentals/mapping"},{"type":"link","label":"Naming Conventions","href":"/docs/fundamentals/naming-convention","docId":"fundamentals/naming-convention"},{"type":"link","label":"Auto Flattening","href":"/docs/fundamentals/auto-flattening","docId":"fundamentals/auto-flattening"},{"type":"link","label":"Mutation","href":"/docs/fundamentals/mutation","docId":"fundamentals/mutation"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Mapping Configuration","items":[{"type":"link","label":"Overview","href":"/docs/mapping-configuration/overview","docId":"mapping-configuration/overview"},{"type":"link","label":"AfterMap","href":"/docs/mapping-configuration/after-map","docId":"mapping-configuration/after-map"},{"type":"link","label":"BeforeMap","href":"/docs/mapping-configuration/before-map","docId":"mapping-configuration/before-map"},{"type":"link","label":"ConstructUsing","href":"/docs/mapping-configuration/construct-using","docId":"mapping-configuration/construct-using"},{"type":"link","label":"Extend","href":"/docs/mapping-configuration/extend","docId":"mapping-configuration/extend"},{"type":"category","label":"ForMember","items":[{"type":"link","label":"Overview","href":"/docs/mapping-configuration/for-member/overview","docId":"mapping-configuration/for-member/overview"},{"type":"link","label":"Ignore","href":"/docs/mapping-configuration/for-member/ignore","docId":"mapping-configuration/for-member/ignore"},{"type":"link","label":"MapFrom","href":"/docs/mapping-configuration/for-member/map-from","docId":"mapping-configuration/for-member/map-from"},{"type":"link","label":"Condition","href":"/docs/mapping-configuration/for-member/condition","docId":"mapping-configuration/for-member/condition"},{"type":"link","label":"FromValue","href":"/docs/mapping-configuration/for-member/from-value","docId":"mapping-configuration/for-member/from-value"},{"type":"link","label":"MapWith","href":"/docs/mapping-configuration/for-member/map-with","docId":"mapping-configuration/for-member/map-with"},{"type":"link","label":"ConvertUsing","href":"/docs/mapping-configuration/for-member/convert-using","docId":"mapping-configuration/for-member/convert-using"},{"type":"link","label":"NullSubstitution","href":"/docs/mapping-configuration/for-member/null-substitution","docId":"mapping-configuration/for-member/null-substitution"},{"type":"link","label":"UndefinedSubstitution","href":"/docs/mapping-configuration/for-member/undefined-substitution","docId":"mapping-configuration/for-member/undefined-substitution"},{"type":"link","label":"MapWithArguments","href":"/docs/mapping-configuration/for-member/map-with-arguments","docId":"mapping-configuration/for-member/map-with-arguments"},{"type":"link","label":"MapDefer","href":"/docs/mapping-configuration/for-member/map-defer","docId":"mapping-configuration/for-member/map-defer"}],"collapsed":true,"collapsible":true},{"type":"link","label":"ForSelf","href":"/docs/mapping-configuration/for-self","docId":"mapping-configuration/for-self"},{"type":"link","label":"NamingConventions","href":"/docs/mapping-configuration/naming-conventions","docId":"mapping-configuration/naming-conventions"},{"type":"link","label":"TypeConverters","href":"/docs/mapping-configuration/type-converters","docId":"mapping-configuration/type-converters"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Strategies","items":[{"type":"link","label":"automapper/classes","href":"/docs/strategies/classes","docId":"strategies/classes"},{"type":"link","label":"automapper/pojos","href":"/docs/strategies/pojos","docId":"strategies/pojos"},{"type":"link","label":"automapper/mikro","href":"/docs/strategies/mikro","docId":"strategies/mikro"},{"type":"link","label":"automapper/sequelize","href":"/docs/strategies/sequelize","docId":"strategies/sequelize"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Miscellaneous","items":[{"type":"link","label":"Transformer Plugin","href":"/docs/misc/transformer-plugin","docId":"misc/transformer-plugin"},{"type":"link","label":"Mapped Types","href":"/docs/misc/mapped-types","docId":"misc/mapped-types"},{"type":"link","label":"Fake Async","href":"/docs/misc/fake-async","docId":"misc/fake-async"}],"collapsed":true,"collapsible":true},{"type":"link","label":"Usage with NestJS","href":"/docs/nestjs","docId":"nestjs"}],"api":[{"type":"category","label":"Core","items":[{"type":"link","label":"README","href":"/docs/api/core/","docId":"api/core/index"},{"type":"link","label":"Exports","href":"/docs/api/core/modules","docId":"api/core/modules"},{"type":"category","label":"Enumerations","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"MapFnClassId","href":"/docs/api/core/enums/MapFnClassId","docId":"api/core/enums/MapFnClassId"},{"type":"link","label":"MappingCallbacksClassId","href":"/docs/api/core/enums/MappingCallbacksClassId","docId":"api/core/enums/MappingCallbacksClassId"},{"type":"link","label":"MappingClassId","href":"/docs/api/core/enums/MappingClassId","docId":"api/core/enums/MappingClassId"},{"type":"link","label":"MappingPropertiesClassId","href":"/docs/api/core/enums/MappingPropertiesClassId","docId":"api/core/enums/MappingPropertiesClassId"},{"type":"link","label":"MappingPropertyClassId","href":"/docs/api/core/enums/MappingPropertyClassId","docId":"api/core/enums/MappingPropertyClassId"},{"type":"link","label":"MappingTransformationClassId","href":"/docs/api/core/enums/MappingTransformationClassId","docId":"api/core/enums/MappingTransformationClassId"},{"type":"link","label":"MetadataClassId","href":"/docs/api/core/enums/MetadataClassId","docId":"api/core/enums/MetadataClassId"},{"type":"link","label":"MetadataObjectMapClassId","href":"/docs/api/core/enums/MetadataObjectMapClassId","docId":"api/core/enums/MetadataObjectMapClassId"},{"type":"link","label":"NestedMappingPairClassId","href":"/docs/api/core/enums/NestedMappingPairClassId","docId":"api/core/enums/NestedMappingPairClassId"},{"type":"link","label":"TransformationType","href":"/docs/api/core/enums/TransformationType","docId":"api/core/enums/TransformationType"}]},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"CamelCaseNamingConvention","href":"/docs/api/core/classes/CamelCaseNamingConvention","docId":"api/core/classes/CamelCaseNamingConvention"},{"type":"link","label":"PascalCaseNamingConvention","href":"/docs/api/core/classes/PascalCaseNamingConvention","docId":"api/core/classes/PascalCaseNamingConvention"},{"type":"link","label":"SnakeCaseNamingConvention","href":"/docs/api/core/classes/SnakeCaseNamingConvention","docId":"api/core/classes/SnakeCaseNamingConvention"}]},{"type":"category","label":"Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"ConditionPredicate","href":"/docs/api/core/interfaces/ConditionPredicate","docId":"api/core/interfaces/ConditionPredicate"},{"type":"link","label":"Converter","href":"/docs/api/core/interfaces/Converter","docId":"api/core/interfaces/Converter"},{"type":"link","label":"CreateMapperOptions","href":"/docs/api/core/interfaces/CreateMapperOptions","docId":"api/core/interfaces/CreateMapperOptions"},{"type":"link","label":"DeferFunction","href":"/docs/api/core/interfaces/DeferFunction","docId":"api/core/interfaces/DeferFunction"},{"type":"link","label":"ErrorHandler","href":"/docs/api/core/interfaces/ErrorHandler","docId":"api/core/interfaces/ErrorHandler"},{"type":"link","label":"MapOptions","href":"/docs/api/core/interfaces/MapOptions","docId":"api/core/interfaces/MapOptions"},{"type":"link","label":"Mapper","href":"/docs/api/core/interfaces/Mapper","docId":"api/core/interfaces/Mapper"},{"type":"link","label":"MappingStrategy","href":"/docs/api/core/interfaces/MappingStrategy","docId":"api/core/interfaces/MappingStrategy"},{"type":"link","label":"MappingStrategyInitializerOptions","href":"/docs/api/core/interfaces/MappingStrategyInitializerOptions","docId":"api/core/interfaces/MappingStrategyInitializerOptions"},{"type":"link","label":"NamingConvention","href":"/docs/api/core/interfaces/NamingConvention","docId":"api/core/interfaces/NamingConvention"},{"type":"link","label":"Resolver","href":"/docs/api/core/interfaces/Resolver","docId":"api/core/interfaces/Resolver"},{"type":"link","label":"TransformerMetadataFactory","href":"/docs/api/core/interfaces/TransformerMetadataFactory","docId":"api/core/interfaces/TransformerMetadataFactory"}]}],"collapsed":true,"collapsible":true},{"type":"category","label":"Classes","items":[{"type":"link","label":"README","href":"/docs/api/classes/","docId":"api/classes/index"},{"type":"link","label":"Exports","href":"/docs/api/classes/modules","docId":"api/classes/modules"},{"type":"category","label":"Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AutoMapOptions","href":"/docs/api/classes/interfaces/AutoMapOptions","docId":"api/classes/interfaces/AutoMapOptions"}]}],"collapsed":true,"collapsible":true},{"type":"category","label":"POJOs","items":[{"type":"link","label":"README","href":"/docs/api/pojos/","docId":"api/pojos/index"},{"type":"link","label":"Exports","href":"/docs/api/pojos/modules","docId":"api/pojos/modules"},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"PojosMetadataMap","href":"/docs/api/pojos/classes/PojosMetadataMap","docId":"api/pojos/classes/PojosMetadataMap"}]}],"collapsed":true,"collapsible":true},{"type":"category","label":"Mikro","items":[{"type":"link","label":"README","href":"/docs/api/mikro/","docId":"api/mikro/index"},{"type":"link","label":"Exports","href":"/docs/api/mikro/modules","docId":"api/mikro/modules"}],"collapsed":true,"collapsible":true},{"type":"category","label":"Sequelize","items":[{"type":"link","label":"README","href":"/docs/api/sequelize/","docId":"api/sequelize/index"},{"type":"link","label":"Exports","href":"/docs/api/sequelize/modules","docId":"api/sequelize/modules"}],"collapsed":true,"collapsible":true},{"type":"category","label":"NestJS","items":[{"type":"link","label":"README","href":"/docs/api/nestjs/","docId":"api/nestjs/index"},{"type":"link","label":"Exports","href":"/docs/api/nestjs/modules","docId":"api/nestjs/modules"},{"type":"category","label":"Classes","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AutomapperModule","href":"/docs/api/nestjs/classes/AutomapperModule","docId":"api/nestjs/classes/AutomapperModule"},{"type":"link","label":"AutomapperProfile","href":"/docs/api/nestjs/classes/AutomapperProfile","docId":"api/nestjs/classes/AutomapperProfile"}]},{"type":"category","label":"Interfaces","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"AutomapperAsyncOptions","href":"/docs/api/nestjs/interfaces/AutomapperAsyncOptions","docId":"api/nestjs/interfaces/AutomapperAsyncOptions"},{"type":"link","label":"AutomapperGlobalOptions","href":"/docs/api/nestjs/interfaces/AutomapperGlobalOptions","docId":"api/nestjs/interfaces/AutomapperGlobalOptions"},{"type":"link","label":"AutomapperOptionsFactory","href":"/docs/api/nestjs/interfaces/AutomapperOptionsFactory","docId":"api/nestjs/interfaces/AutomapperOptionsFactory"}]}],"collapsed":true,"collapsible":true}]},"docs":{"api/classes/index":{"id":"api/classes/index","title":"@automapper/classes","description":"This is the official strategy from @automapper to work with TS/ES6 Class","sidebar":"api"},"api/classes/interfaces/AutoMapOptions":{"id":"api/classes/interfaces/AutoMapOptions","title":"Interface: AutoMapOptions","description":"Properties","sidebar":"api"},"api/classes/modules":{"id":"api/classes/modules","title":"@automapper/classes","description":"Interfaces","sidebar":"api"},"api/core/classes/CamelCaseNamingConvention":{"id":"api/core/classes/CamelCaseNamingConvention","title":"Class: CamelCaseNamingConvention","description":"CamelCaseNamingConvention","sidebar":"api"},"api/core/classes/PascalCaseNamingConvention":{"id":"api/core/classes/PascalCaseNamingConvention","title":"Class: PascalCaseNamingConvention","description":"PascalCaseNamingConvention","sidebar":"api"},"api/core/classes/SnakeCaseNamingConvention":{"id":"api/core/classes/SnakeCaseNamingConvention","title":"Class: SnakeCaseNamingConvention","description":"SnakeCaseNamingConvention","sidebar":"api"},"api/core/enums/MapFnClassId":{"id":"api/core/enums/MapFnClassId","title":"Enumeration: MapFnClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/MappingCallbacksClassId":{"id":"api/core/enums/MappingCallbacksClassId","title":"Enumeration: MappingCallbacksClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/MappingClassId":{"id":"api/core/enums/MappingClassId","title":"Enumeration: MappingClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/MappingPropertiesClassId":{"id":"api/core/enums/MappingPropertiesClassId","title":"Enumeration: MappingPropertiesClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/MappingPropertyClassId":{"id":"api/core/enums/MappingPropertyClassId","title":"Enumeration: MappingPropertyClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/MappingTransformationClassId":{"id":"api/core/enums/MappingTransformationClassId","title":"Enumeration: MappingTransformationClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/MetadataClassId":{"id":"api/core/enums/MetadataClassId","title":"Enumeration: MetadataClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/MetadataObjectMapClassId":{"id":"api/core/enums/MetadataObjectMapClassId","title":"Enumeration: MetadataObjectMapClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/NestedMappingPairClassId":{"id":"api/core/enums/NestedMappingPairClassId","title":"Enumeration: NestedMappingPairClassId","description":"Enumeration members","sidebar":"api"},"api/core/enums/TransformationType":{"id":"api/core/enums/TransformationType","title":"Enumeration: TransformationType","description":"Enumeration members","sidebar":"api"},"api/core/index":{"id":"api/core/index","title":"@automapper/core","description":"This is the core package that will handle mapping configurations and mapping operations.","sidebar":"api"},"api/core/interfaces/ConditionPredicate":{"id":"api/core/interfaces/ConditionPredicate","title":"Interface: ConditionPredicate<TSource>","description":"Type parameters","sidebar":"api"},"api/core/interfaces/Converter":{"id":"api/core/interfaces/Converter","title":"Interface: Converter<TSource, TConvertDestination>","description":"Type parameters","sidebar":"api"},"api/core/interfaces/CreateMapperOptions":{"id":"api/core/interfaces/CreateMapperOptions","title":"Interface: CreateMapperOptions","description":"Properties","sidebar":"api"},"api/core/interfaces/DeferFunction":{"id":"api/core/interfaces/DeferFunction","title":"Interface: DeferFunction<TSource, TDestination, TSelectorReturn>","description":"Type parameters","sidebar":"api"},"api/core/interfaces/ErrorHandler":{"id":"api/core/interfaces/ErrorHandler","title":"Interface: ErrorHandler","description":"Methods","sidebar":"api"},"api/core/interfaces/MapOptions":{"id":"api/core/interfaces/MapOptions","title":"Interface: MapOptions<TSource, TDestination, TExtraArgs>","description":"Type parameters","sidebar":"api"},"api/core/interfaces/Mapper":{"id":"api/core/interfaces/Mapper","title":"Interface: Mapper","description":"Properties","sidebar":"api"},"api/core/interfaces/MappingStrategy":{"id":"api/core/interfaces/MappingStrategy","title":"Interface: MappingStrategy<TIdentifier>","description":"Type parameters","sidebar":"api"},"api/core/interfaces/MappingStrategyInitializerOptions":{"id":"api/core/interfaces/MappingStrategyInitializerOptions","title":"Interface: MappingStrategyInitializerOptions","description":"Properties","sidebar":"api"},"api/core/interfaces/NamingConvention":{"id":"api/core/interfaces/NamingConvention","title":"Interface: NamingConvention","description":"Implemented by","sidebar":"api"},"api/core/interfaces/Resolver":{"id":"api/core/interfaces/Resolver","title":"Interface: Resolver<TSource, TDestination, TResolvedType>","description":"Type parameters","sidebar":"api"},"api/core/interfaces/TransformerMetadataFactory":{"id":"api/core/interfaces/TransformerMetadataFactory","title":"Interface: TransformerMetadataFactory<TModel>","description":"Type parameters","sidebar":"api"},"api/core/modules":{"id":"api/core/modules","title":"@automapper/core","description":"Enumerations","sidebar":"api"},"api/mikro/index":{"id":"api/mikro/index","title":"@automapper/mikro","description":"This library was generated with Nx.","sidebar":"api"},"api/mikro/modules":{"id":"api/mikro/modules","title":"@automapper/mikro","description":"Functions","sidebar":"api"},"api/nestjs/classes/AutomapperModule":{"id":"api/nestjs/classes/AutomapperModule","title":"Class: AutomapperModule","description":"Constructors","sidebar":"api"},"api/nestjs/classes/AutomapperProfile":{"id":"api/nestjs/classes/AutomapperProfile","title":"Class: AutomapperProfile","description":"Constructors","sidebar":"api"},"api/nestjs/index":{"id":"api/nestjs/index","title":"@automapper/nestjs","description":"This is a NestJS module to integrate @automapper with NestJS.","sidebar":"api"},"api/nestjs/interfaces/AutomapperAsyncOptions":{"id":"api/nestjs/interfaces/AutomapperAsyncOptions","title":"Interface: AutomapperAsyncOptions","description":"Hierarchy","sidebar":"api"},"api/nestjs/interfaces/AutomapperGlobalOptions":{"id":"api/nestjs/interfaces/AutomapperGlobalOptions","title":"Interface: AutomapperGlobalOptions","description":"Properties","sidebar":"api"},"api/nestjs/interfaces/AutomapperOptionsFactory":{"id":"api/nestjs/interfaces/AutomapperOptionsFactory","title":"Interface: AutomapperOptionsFactory","description":"Methods","sidebar":"api"},"api/nestjs/modules":{"id":"api/nestjs/modules","title":"@automapper/nestjs","description":"Classes","sidebar":"api"},"api/pojos/classes/PojosMetadataMap":{"id":"api/pojos/classes/PojosMetadataMap","title":"Class: PojosMetadataMap","description":"Constructors","sidebar":"api"},"api/pojos/index":{"id":"api/pojos/index","title":"@automapper/pojos","description":"This is the official strategy from @automapper to work with Interfaces/Types along with Plain Objects","sidebar":"api"},"api/pojos/modules":{"id":"api/pojos/modules","title":"@automapper/pojos","description":"Classes","sidebar":"api"},"api/sequelize/index":{"id":"api/sequelize/index","title":"@automapper/sequelize","description":"This library was generated with Nx.","sidebar":"api"},"api/sequelize/modules":{"id":"api/sequelize/modules","title":"@automapper/sequelize","description":"Functions","sidebar":"api"},"fundamentals/auto-flattening":{"id":"fundamentals/auto-flattening","title":"Auto Flattening","description":"One of the common usages of object-object mapping is to take a complex object model and flatten it to a simpler model. If we set up the models following the convention, AutoMapper can help with flattening automatically. To enable Auto Flattening, we need to set the NamingConvention for our models.","sidebar":"docs"},"fundamentals/mapper":{"id":"fundamentals/mapper","title":"Mapper","description":"Mapper","sidebar":"docs"},"fundamentals/mapping":{"id":"fundamentals/mapping","title":"Mapping","description":"Mapping","sidebar":"docs"},"fundamentals/mutation":{"id":"fundamentals/mutation","title":"Mutation","description":"AutoMapper provides a way to map mutably using the mutate() API (and its variants)","sidebar":"docs"},"fundamentals/naming-convention":{"id":"fundamentals/naming-convention","title":"Naming Conventions","description":"NamingConvention allows AutoMapper to map models with different casing convention in terms of properties\' names. Out of the box, AutoMapper provides 3 conventions:","sidebar":"docs"},"getting-started/installation":{"id":"getting-started/installation","title":"Installation","description":"Core","sidebar":"docs"},"getting-started/migrate-to-automapper-v8":{"id":"getting-started/migrate-to-automapper-v8","title":"Migrating to AutoMapper 8","description":"Overview","sidebar":"docs"},"getting-started/overview":{"id":"getting-started/overview","title":"Overview","description":"What is AutoMapper?","sidebar":"docs"},"mapping-configuration/after-map":{"id":"mapping-configuration/after-map","title":"AfterMap","description":"As the name suggests, afterMap() sets up a MapCallback to be called after the map operation.","sidebar":"docs"},"mapping-configuration/before-map":{"id":"mapping-configuration/before-map","title":"BeforeMap","description":"As the name suggests, beforeMap() sets up a MapCallback to be called before the map operation.","sidebar":"docs"},"mapping-configuration/construct-using":{"id":"mapping-configuration/construct-using","title":"ConstructUsing","description":"Call constructUsing() and pass in a DestinationConstructor to customize how AutoMapper should construct the Destination before every map operation against that Destination.","sidebar":"docs"},"mapping-configuration/extend":{"id":"mapping-configuration/extend","title":"Extend","description":"Call extend() and pass in either a Mapping or a pair of models to tell AutoMapper to extend the MappingProperties to the Mapping we are creating","sidebar":"docs"},"mapping-configuration/for-member/condition":{"id":"mapping-configuration/for-member/condition","title":"Condition","description":"Call condition() to conditionally execute the auto-map operation for the property (e.g: Source#propertyName -> Destination#propertyName) by passing in a predicateFn that will be called with the sourceObject","sidebar":"docs"},"mapping-configuration/for-member/convert-using":{"id":"mapping-configuration/for-member/convert-using","title":"ConvertUsing","description":"Call convertUsing() and pass in a Converter to map the configured property with the Converter#convert method.","sidebar":"docs"},"mapping-configuration/for-member/from-value":{"id":"mapping-configuration/for-member/from-value","title":"FromValue","description":"Call fromValue() and pass in a raw value to map to the configured property. If we pass in an object, the object will be mapped as-is without any consideration for nested Mapping.","sidebar":"docs"},"mapping-configuration/for-member/ignore":{"id":"mapping-configuration/for-member/ignore","title":"Ignore","description":"Call ignore() on a property to skip the map operation for the property while still mark the property as configured. This ultimately prevents the ignored property from being checked by assertUnmappedProperties() and makes the property undefined","sidebar":"docs"},"mapping-configuration/for-member/map-defer":{"id":"mapping-configuration/for-member/map-defer","title":"MapDefer","description":"mapDefer() is a special type of MemberMapFunction that can be used to defer another MemberMapFunction based on some logic in forMember()","sidebar":"docs"},"mapping-configuration/for-member/map-from":{"id":"mapping-configuration/for-member/map-from","title":"MapFrom","description":"Call mapFrom() to select the value, from the sourceObject, to map to the property being configured","sidebar":"docs"},"mapping-configuration/for-member/map-with":{"id":"mapping-configuration/for-member/map-with","title":"MapWith","description":"In some cases where AutoMapper fails to auto-map nested models, call mapWith() to take over this operation for the configured property.","sidebar":"docs"},"mapping-configuration/for-member/map-with-arguments":{"id":"mapping-configuration/for-member/map-with-arguments","title":"MapWithArguments","description":"Call mapWithArguments() to map the configured property with extra arguments at the time the map operation occurs (aka mapper.map())","sidebar":"docs"},"mapping-configuration/for-member/null-substitution":{"id":"mapping-configuration/for-member/null-substitution","title":"NullSubstitution","description":"Call nullSubstitution() and pass in a raw value to map to the configured property in the case of the same property on Source is null. If we pass in an object, AutoMapper will map the object as-is without any consideration for nested mapping.","sidebar":"docs"},"mapping-configuration/for-member/overview":{"id":"mapping-configuration/for-member/overview","title":"Overview","description":"Call forMember() and pass in a Selector along with a MemberMapFunction to customize the MappingTransformation of a particular property on the Destination","sidebar":"docs"},"mapping-configuration/for-member/undefined-substitution":{"id":"mapping-configuration/for-member/undefined-substitution","title":"UndefinedSubstitution","description":"Call undefinedSubstitution() and pass in a raw value to map to the configured property in the case of the same property on Source is undefined. If we pass in an object, AutoMapper will map the object as-is without any consideration for nested mapping.","sidebar":"docs"},"mapping-configuration/for-self":{"id":"mapping-configuration/for-self","title":"ForSelf","description":"In previous sections, we\'ve learned that we can have Auto Flattening with Naming Conventions.","sidebar":"docs"},"mapping-configuration/naming-conventions":{"id":"mapping-configuration/naming-conventions","title":"NamingConventions","description":"Call namingConventions() and pass in a NamingConventionInput to customize the Mapping\'s NamingConvention","sidebar":"docs"},"mapping-configuration/overview":{"id":"mapping-configuration/overview","title":"Overview","description":"Convention over Configuration","sidebar":"docs"},"mapping-configuration/type-converters":{"id":"mapping-configuration/type-converters","title":"TypeConverters","description":"What is Type Converter?","sidebar":"docs"},"misc/fake-async":{"id":"misc/fake-async","title":"Fake Async","description":"\\"Fake\\" Async","sidebar":"docs"},"misc/mapped-types":{"id":"misc/mapped-types","title":"Mapped Types","description":"@automapper/classes/mapped-types is part of the public API of @automapper/classes.","sidebar":"docs"},"misc/transformer-plugin":{"id":"misc/transformer-plugin","title":"Transformer Plugin","description":"@automapper/classes/transformer-plugin is part of the public API of @automapper/classes.","sidebar":"docs"},"nestjs":{"id":"nestjs","title":"Usage with NestJS","description":"@automapper/nestjs is the official integration for NestJS.","sidebar":"docs"},"strategies/classes":{"id":"strategies/classes","title":"automapper/classes","description":"Overview","sidebar":"docs"},"strategies/mikro":{"id":"strategies/mikro","title":"automapper/mikro","description":"Overview","sidebar":"docs"},"strategies/pojos":{"id":"strategies/pojos","title":"automapper/pojos","description":"Overview","sidebar":"docs"},"strategies/sequelize":{"id":"strategies/sequelize","title":"automapper/sequelize","description":"Overview","sidebar":"docs"},"tutorial/create-mapper":{"id":"tutorial/create-mapper","title":"Create a Mapper","description":"Installation","sidebar":"docs"},"tutorial/create-mapping":{"id":"tutorial/create-mapping","title":"Create Mappings","description":"Our models have been prepped from the last step. It is time to create the Mapping between them.","sidebar":"docs"},"tutorial/mapping-configurations":{"id":"tutorial/mapping-configurations","title":"Use Mapping Configurations","description":"fullName","sidebar":"docs"},"tutorial/mapping-profile":{"id":"tutorial/mapping-profile","title":"Group Mapping Logic with Profile","description":"In the previous section, you\'ve created your first Mappings for Bio  BioDto and User  UserDto","sidebar":"docs"},"tutorial/preface":{"id":"tutorial/preface","title":"Preface","description":"Welcome to AutoMapper TypeScript! This basic tutorial will show you the problem that AutoMapper tries to solve and how to use AutoMapper to solve it.","sidebar":"docs"}}}')}}]);