"use strict";(self.webpackChunkdocumentations=self.webpackChunkdocumentations||[]).push([[7687],{9613:function(t,e,n){n.d(e,{Zo:function(){return c},kt:function(){return d}});var r=n(9496);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function o(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,r)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?o(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function u(t,e){if(null==t)return{};var n,r,a=function(t,e){if(null==t)return{};var n,r,a={},o=Object.keys(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);for(r=0;r<o.length;r++)n=o[r],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var p=r.createContext({}),s=function(t){var e=r.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},c=function(t){var e=s(t.components);return r.createElement(p.Provider,{value:e},t.children)},m={inlineCode:"code",wrapper:function(t){var e=t.children;return r.createElement(r.Fragment,{},e)}},l=r.forwardRef((function(t,e){var n=t.components,a=t.mdxType,o=t.originalType,p=t.parentName,c=u(t,["components","mdxType","originalType","parentName"]),l=s(n),d=a,f=l["".concat(p,".").concat(d)]||l[d]||m[d]||o;return n?r.createElement(f,i(i({ref:e},c),{},{components:n})):r.createElement(f,i({ref:e},c))}));function d(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var o=n.length,i=new Array(o);i[0]=l;var u={};for(var p in e)hasOwnProperty.call(e,p)&&(u[p]=e[p]);u.originalType=t,u.mdxType="string"==typeof t?t:a,i[1]=u;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}l.displayName="MDXCreateElement"},6612:function(t,e,n){n.r(e),n.d(e,{assets:function(){return c},contentTitle:function(){return p},default:function(){return d},frontMatter:function(){return u},metadata:function(){return s},toc:function(){return m}});var r=n(5443),a=n(3010),o=(n(9496),n(9613)),i=["components"],u={id:"mutation",title:"Mutation",sidebar_label:"Mutation",sidebar_position:5},p=void 0,s={unversionedId:"fundamentals/mutation",id:"fundamentals/mutation",title:"Mutation",description:"AutoMapper provides a way to map mutably using the mutate() API (and its variants)",source:"@site/docs/fundamentals/mutation.mdx",sourceDirName:"fundamentals",slug:"/fundamentals/mutation",permalink:"/docs/fundamentals/mutation",draft:!1,editUrl:"https://github.com/nartc/mapper/tree/main/packages/documentations/docs/fundamentals/mutation.mdx",tags:[],version:"current",lastUpdatedBy:"Chau Tran",lastUpdatedAt:1648359081,formattedLastUpdatedAt:"3/27/2022",sidebarPosition:5,frontMatter:{id:"mutation",title:"Mutation",sidebar_label:"Mutation",sidebar_position:5},sidebar:"docs",previous:{title:"Auto Flattening",permalink:"/docs/fundamentals/auto-flattening"},next:{title:"Overview",permalink:"/docs/mapping-configuration/overview"}},c={},m=[],l={toc:m};function d(t){var e=t.components,n=(0,a.Z)(t,i);return(0,o.kt)("wrapper",(0,r.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"AutoMapper provides a way to map ",(0,o.kt)("em",{parentName:"p"},"mutably")," using the ",(0,o.kt)("inlineCode",{parentName:"p"},"mutate()")," API (and its variants)"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"mapper.map();\nmapper.mapAsync();\nmapper.mapArray();\nmapper.mapArrayAsync();\n\nmapper.mutate();\nmapper.mutateAsync();\nmapper.mutateArray();\nmapper.mutateArrayAsync();\n")),(0,o.kt)("p",null,"The ",(0,o.kt)("inlineCode",{parentName:"p"},"mutate()")," API returns ",(0,o.kt)("inlineCode",{parentName:"p"},"void")," as we would pass in the ",(0,o.kt)("inlineCode",{parentName:"p"},"destinationObject")," to mutate"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-ts"},"// map()\nconst dto = mapper.map(user, User, UserDto);\n\n// mutate()\nlet dto = {};\nmapper.mutate(user, dto, User, UserDto);\n")))}d.isMDXComponent=!0}}]);